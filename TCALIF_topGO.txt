source("http://bioconductor.org/biocLite.R")
biocLite()
library(topGO)
geneID2GO <- readMappings(file = "annotations.txt")
geneUniverse <- names(geneID2GO)
genesOfInterest <- read.table("interestinggenes.txt",header=FALSE)
genesOfInterest <- as.character(genesOfInterest$V1)
geneList <- factor(as.integer(geneUniverse %in% genesOfInterest))
names(geneList) <- geneUniverse

myGOdata <- new("topGOdata", description="My project", ontology="BP", allGenes=geneList,  annot = annFUN.gene2GO, gene2GO = geneID2GO)
sg <- sigGenes(myGOdata)
str(sg)
numSigGenes(myGOdata) 
resultFisher <- runTest(myGOdata, algorithm="classic", statistic="fisher")
allRes <- GenTable(myGOdata, classicFisher = resultFisher, orderBy = "resultFisher", ranksOf = "classicFisher", topNodes = 10)
write.table(allRes, "3hr_0.1_BP_output.txt")

myGOdata <- new("topGOdata", description="My project", ontology="MF", allGenes=geneList,  annot = annFUN.gene2GO, gene2GO = geneID2GO)
sg <- sigGenes(myGOdata)
str(sg)
numSigGenes(myGOdata) 
resultFisher <- runTest(myGOdata, algorithm="classic", statistic="fisher")
allRes <- GenTable(myGOdata, classicFisher = resultFisher, orderBy = "resultFisher", ranksOf = "classicFisher", topNodes = 10)
write.table(allRes, "3hr_0.1_MF_output.txt")

myGOdata <- new("topGOdata", description="My project", ontology="CC", allGenes=geneList,  annot = annFUN.gene2GO, gene2GO = geneID2GO)
sg <- sigGenes(myGOdata)
str(sg)
numSigGenes(myGOdata) 
resultFisher <- runTest(myGOdata, algorithm="classic", statistic="fisher")
allRes <- GenTable(myGOdata, classicFisher = resultFisher, orderBy = "resultFisher", ranksOf = "classicFisher", topNodes = 10)
write.table(allRes, "3hr_0.1_CC_output.txt")